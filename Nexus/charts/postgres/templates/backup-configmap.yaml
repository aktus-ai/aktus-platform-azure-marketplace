apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-backup-script
  labels:
    app: aktus-postgres-backup
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    # Configuration
    BACKUP_DIR="/backup"
    DATE=$(date +"%Y-%m-%d_%H-%M-%S")
    BACKUP_FILE="${BACKUP_DIR}/nexus_postgres_${DATE}.sql.gz"
    RETENTION_DAYS=7
    
    echo "Starting Nexus PostgreSQL backup at $(date)"
    echo "Backup file: $BACKUP_FILE"
    
    # Wait for PostgreSQL to be ready
    echo "Waiting for PostgreSQL to be ready..."
    until pg_isready -h "$POSTGRES_HOST" -U "$POSTGRES_USER"; do
      echo "PostgreSQL is not ready yet, waiting 5 seconds..."
      sleep 5
    done
    
    echo "PostgreSQL is ready, starting backup..."
    
    # Create backup directory if it doesn't exist
    mkdir -p "$BACKUP_DIR"
    
    # Perform backup with compression
    PGPASSWORD="$POSTGRES_PASSWORD" pg_dump \
      -h "$POSTGRES_HOST" \
      -U "$POSTGRES_USER" \
      -d "$POSTGRES_DB" \
      --verbose \
      --no-password \
      --format=custom \
      --compress=9 \
      --file="$BACKUP_FILE"
    
    # Check if backup was successful
    if [ $? -eq 0 ]; then
      echo "✅ Backup completed successfully: $BACKUP_FILE"
      
      # Get backup size
      BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
      echo "📦 Backup size: $BACKUP_SIZE"
      
      # Clean up old backups (keep last 7 days)
      echo "🧹 Cleaning up old backups (keeping last $RETENTION_DAYS days)..."
      find "$BACKUP_DIR" -name "nexus_postgres_*.sql.gz" -type f -mtime +$RETENTION_DAYS -delete
      
      # List remaining backups
      echo "📋 Current backups:"
      ls -lah "$BACKUP_DIR"/nexus_postgres_*.sql.gz 2>/dev/null || echo "No backups found"
      
      echo "✅ Nexus backup process completed successfully at $(date)"
    else
      echo "❌ Backup failed!"
      exit 1
    fi 
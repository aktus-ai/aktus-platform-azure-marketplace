# aktus-multimodal-data-ingestion-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aktus-multimodal-data-ingestion
  annotations:
    gke-gcsfuse/volumes: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aktus-multimodal-data-ingestion-service
  template:
    metadata:
      annotations:
        gke-gcsfuse/volumes: "true"
      labels:
        app: aktus-multimodal-data-ingestion-service
    spec:
      terminationGracePeriodSeconds: 60
      
      containers:
        - name: aktus-multimodal-data-ingestion-service
          image: {{ .Values.aktusMdi.image }}
          imagePullPolicy: {{ .Values.aktusMdi.imagePullPolicy }}
          stdin: true
          tty: true
          workingDir: /usr/src/app
          ports:
            - containerPort: {{ .Values.aktusMdi.ports.flower }}
              name: flower
            - containerPort: {{ .Values.aktusMdi.ports.ocr }}
              name: ocr
            - containerPort: {{ .Values.aktusMdi.ports.layout }}
              name: layout
          env:
            - name: CELERY_CONCURRENCY
              value: "48"
            - name: OCR_TEMPERATURE
              value: "0.0"
            - name: DB_MANAGER_URL
              value: "http://aktus-database:8080"
            - name: RABBITMQ_USERNAME
              value: "{{ .Values.aktusMdi.rabbitmq.username }}"
            - name: RABBITMQ_PASSWORD
              value: "{{ .Values.aktusMdi.rabbitmq.password }}"
            - name: RABBITMQ_BROKER_HOST
              value: "{{ .Values.aktusMdi.rabbitmq.host }}:{{ .Values.aktusMdi.rabbitmq.port }}"
            - name: RABBITMQ_VHOST
              value: "{{ .Values.aktusMdi.rabbitmq.vhost }}"
            - name: YOLO_LAYOUT_PARSER_DEFAULT_MODEL_PATH
              value: "{{ .Values.aktusMdi.config.yolo.modelPath }}"
            - name: YOLO_LAYOUT_PARSER_DEFAULT_DEVICE
              value: "{{ .Values.aktusMdi.config.yolo.defaultDevice }}"
            - name: RABBITMQ_MONITOR_USERNAME
              value: "{{ .Values.aktusMdi.rabbitmq.username }}"
            - name: RABBITMQ_MONITOR_PASSWORD
              value: "{{ .Values.aktusMdi.rabbitmq.password }}"
            - name: REDIS_BACKEND_URI
              value: "redis://{{ .Values.aktusMdi.redis.host }}/0"
            - name: VDB_ENDPOINT
              value: "http://{{ .Values.aktusMdi.vectorEmbedding.host }}/vectorindex/embed_data"
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: aktus-openai-secret
                  key: aktus-openai-key
            - name: DOC_UPLOAD_DIR
              value: "{{ .Values.aktusMdi.paths.docUpload }}"
            - name: DOC_PROCESSING_DIR
              value: "{{ .Values.aktusMdi.paths.docProcessing }}"
            - name: EXTRACTED_DATA_DIR
              value: "{{ .Values.aktusMdi.paths.extractedData }}"
            - name: FLOWER_UNAUTHENTICATED_API
              value: "{{ .Values.aktusMdi.config.flower.unauthenticatedApi }}"
            - name: CHART_CLASSIFIER_DEFAULT_MODEL_ID
              value: "{{ .Values.aktusMdi.config.chartClassifier.modelId }}"
            - name: CHART_CLASSIFIER_DEFAULT_TARGET_CLASS_IDX
              value: "{{ .Values.aktusMdi.config.chartClassifier.defaultTargetClassIdx }}"
            - name: DOC_CLASSIFIER_DEFAULT_MODEL_ID
              value: "{{ .Values.aktusMdi.config.docClassifier.modelId }}"
            - name: DOC_CLASSIFIER_DEFAULT_DEVICE
              value: "{{ .Values.aktusMdi.config.docClassifier.defaultDevice }}"
            - name: TABLE_TRANSFORMER_DEFAULT_DEVICE
              value: "{{ .Values.aktusMdi.config.tableTransformer.defaultDevice }}"
            - name: TABLE_PARSER_DEFAULT_DEVICE
              value: "{{ .Values.aktusMdi.config.tableParser.defaultDevice }}"
            - name: AKTUS_CHAT_SERVER_ADDRESS
              value: "{{ .Values.aktusMdi.modelInference.host }}"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: VDB_GRAPHRAG_INDEXING_ENDPOINT
              value: "http://{{ .Values.aktusMdi.vectorEmbedding.host }}/vectorindex/index_graphrag"
            - name: USE_MINICPM_FOR_FLOWCHART
              value: "true"
          volumeMounts:
            - name: doc-processing
              mountPath: {{ .Values.aktusMdi.paths.docProcessing }}
            - name: extracted-data
              mountPath: {{ .Values.aktusMdi.paths.extractedData }}
            - name: document-upload
              mountPath: {{ .Values.aktusMdi.paths.docUpload }}
          resources:
            {{- toYaml .Values.aktusMdi.resources | nindent 12 }}
      serviceAccountName: {{ .Values.aktusMdi.serviceAccount | default "nexus-primary-cluster-sa" }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      volumes:
        - name: doc-processing
          persistentVolumeClaim:
            claimName: nexus-processing-pvc
        - name: extracted-data
          persistentVolumeClaim:
            claimName: nexus-extracted-pvc
        - name: document-upload
          persistentVolumeClaim:
            claimName: nexus-upload-pvc
# aktus-inference-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aktus-inference
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aktus-inference-service
  template:
    metadata:
      annotations:
        kubernetes.io/gpu-accelerator: "true"
      labels:
        app: aktus-inference-service
        azure-extensions-usage-release-identifier: "{{ .Release.Name }}"
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
        kubernetes.azure.com/accelerator: nvidia
        agentpool: gpupool
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists
          effect: NoSchedule
        - key: sku
          operator: Equal
          value: gpu
          effect: NoSchedule
      terminationGracePeriodSeconds: 60
      containers:
        - name: aktus-inference-service
          image: "{{ .Values.global.azure.images.aktusInference.registry }}/{{ .Values.global.azure.images.aktusInference.image }}:{{ .Values.global.azure.images.aktusInference.tag }}"
          imagePullPolicy: "{{ .Values.aktusInference.imagePullPolicy }}"
          ports:
            - containerPort: {{ .Values.aktusInference.grpcPort }}
              name: grpc
          env:
            - name: HF_LOGIN_KEY
              valueFrom:
                secretKeyRef:
                  name: aktus-huggingface-secret
                  key: login-key
            - name: MINICPM_BASE_MODEL_PATH
              value: "{{ .Values.aktusInference.modelConfig.minicpm.baseModelPath }}"
            - name: MINICPM_PEFT_MODEL_PATH_FLOWCHART
              value: "{{ .Values.aktusInference.modelConfig.minicpm.peftModelPath }}"
            - name: MINICPM_PEFT_MODEL_PATH_TABLE
              value: "{{ .Values.aktusInference.modelConfig.minicpm.peftModelPath }}"
            - name: MINICPM_PROCESSOR_PATH
              value: "{{ .Values.aktusInference.modelConfig.minicpm.processorPath }}"
            - name: YOLO_LAYOUT_PARSER_DEFAULT_MODEL_PATH
              value: "{{ .Values.aktusInference.modelConfig.yolo.modelPath }}"
            - name: SERVER_URI
              value: {{ .Values.aktusInference.serverConfig.uri | quote }}
            - name: ENABLE_FLASH_ATTENTION
              value: {{ .Values.aktusInference.serverConfig.enableFlashAttention | quote }}
            - name: HF_LOCAL_FILES_ONLY
              value: {{ .Values.aktusInference.serverConfig.hfLocalFilesOnly | quote }}
            - name: DEFAULT_DEVICE
              value: {{ .Values.aktusInference.serverConfig.defaultDevice | quote }}
            - name: NVIDIA_VISIBLE_DEVICES
              value: "{{ .Values.aktusInference.gpu.nvidiaVisibleDevices }}"
            - name: CUDA_VISIBLE_DEVICES
              value: "{{ .Values.aktusInference.gpu.cudaVisibleDevices }}"
          volumeMounts:
            - name: document-upload
              mountPath: {{ .Values.aktusInference.paths.docUpload }}
            - name: doc-processing
              mountPath: {{ .Values.aktusInference.paths.docProcessing }}
            - name: nexus-models
              mountPath: {{ .Values.aktusInference.paths.nexusModels }}
          resources:
            {{- toYaml .Values.aktusInference.resources | nindent 12 }}
      serviceAccountName: {{ .Values.aktusInference.serviceAccount | default "nexus-primary-cluster-sa" }}
      volumes:
        - name: document-upload
          persistentVolumeClaim:
            claimName: nexus-upload-pvc
        - name: doc-processing
          persistentVolumeClaim:
            claimName: nexus-processing-pvc
        - name: nexus-models
          persistentVolumeClaim:
            claimName: nexus-models-pvc